{"version":3,"sources":["util/colors.js","Images/index.jsx","Images/ghost.png","Images/user-green.png","Components/ChatListItem/index.jsx","Components/ChatIntro/index.jsx","Components/MessageItem/index.jsx","Components/Chat/index.jsx","Components/NewChatPicker/index.jsx","server/API.js","server/firebase_config.js","Components/Login/index.jsx","App.js","index.js"],"names":["GHOST","USER","active","contact","onClick","avatar","className","src","undefined","Images","name","Image","alt","user","message","key","style","justifyContent","id","author","backgroundColor","text","date","useState","isEmojiOpen","setEmojiOpen","setText","isListening","setListening","messageList","body","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","useEffect","current","scrollHeight","offsetHeight","scrollTop","image","color","colors","ref","map","height","onEmojiClick","event","objEmoji","emoji","width","marginLeft","type","placeholder","value","onChange","typed","target","onstart","onend","onresult","result","transcript","start","contacts","isShowing","setShowing","contactList","left","item","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","facebookLoginPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","addUser","collection","doc","set","merge","getContactList","userId","list","get","forEach","userData","data","push","onReceive","handleFacebookLogin","API","alert","App","React","setContacts","userContacts","getContacts","setUser","activeChat","setActiveChat","isShowingNewChat","setIsShowingNewChat","buttonColor","handleLoginData","loggedUser","uid","displayName","photoURL","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a62a741.chunk.js","sourcesContent":["\r\nconst defaultButtonColor = '#919191';\r\n\r\nexport default {\r\n  DEFAULT_BUTTON_COLOR : defaultButtonColor\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport ghost from './ghost.png'\r\nimport user from './user-green.png'\r\n\r\nconst Ghost = ghost;\r\nconst User = user;\r\n\r\nexport default {\r\n\r\n  GHOST: Ghost,\r\n  USER: User\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ghost.78a34c6f.png\";","export default __webpack_public_path__ + \"static/media/user-green.cfde39fc.png\";","import React from 'react'\r\nimport './ChatListItem.css'\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport Colors from '../../util/colors'\r\nimport Images from '../../Images'\r\n\r\n\r\nexport default ( { active, contact, onClick }) => {\r\n\r\n  let avatar =  contact.avatar\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className = {`contact-card  ${active ? 'active' : ''}`} onClick={onClick}>\r\n\r\n      <img\r\n        src={avatar === undefined || avatar === null ? Images.USER : avatar} className='avatar' />\r\n\r\n\r\n      <div className='lines'>\r\n\r\n        <div className=\"line\">\r\n\r\n          <div className=\"name\">\r\n            {contact.name}\r\n          </div>\r\n\r\n          <div className=\"date\">\r\n            31/01/2020\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n\r\n          <div className=\"lastMessage\">\r\n            <p>Pedro falácias >-()</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './ChatIntro.css'\r\n\r\nimport Image from '../../Images'\r\n\r\nexport default () => {\r\n\r\n\r\n  return (\r\n\r\n    <div className='intro--view'>\r\n\r\n      <h1> Seja Bem Vindo ao Whatsapp 2 </h1>\r\n\r\n        <img src={Image.GHOST} alt=\"ghost\" className='intro--image'/>\r\n\r\n      <h2> Este clone do whatssap vai além do visual, teste o chat, inicie uma conversa com algum usuário </h2>\r\n\r\n\r\n      <h5>...pedro conteudos ):-()</h5>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './MessageItem.css'\r\n\r\nexport default ({user, message, key}) => {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"message-line\"\r\n\r\n      style={\r\n        {\r\n          justifyContent: user.id === message.author.id ? 'flex-end' : 'flex-start'\r\n        }\r\n      }\r\n    >\r\n      <div className=\"message-item\"\r\n\r\n      style={\r\n        {\r\n          backgroundColor: user.id === message.author.id ? '#DCF8C6' : 'flex-start'\r\n        }\r\n      }\r\n      >\r\n\r\n        <div className=\"message\">\r\n          <p className=\"text\">\r\n            { message.text }\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"message-data\">\r\n          {message.date}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Chat.css'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nimport MessageItem from '../MessageItem'\r\n\r\nimport colors from '../../util/colors';\r\n\r\nexport default ({contact, user}) => {\r\n\r\n\r\n  const [isEmojiOpen, setEmojiOpen] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [isListening, setListening] = useState(false);\r\n  const [messageList, setMessageList] = useState(\r\n    [\r\n      {author: contact, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: contact, text: ' || Pedro Comunicações Textuais deseja se comunicar com vossa ppessoa >() ||  ', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >() o que deseja comunicar?', date: '00:00'},\r\n\r\n      {author: contact, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: contact, text: '|| Pedro Comunicações Textuais deseja se comunicar com vossa ppessoa >() ||  ', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >() o que deseja comunicar?', date: '00:00'},\r\n\r\n      {author: contact, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: contact, text: ' || Pedro Comunicações Textuais deseja se comunicar com vossa ppessoa >() ||  ', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >()', date: '00:00'},\r\n      {author: user, text: 'Pedro Comunicações Textuais >() o que deseja comunicar?', date: '00:00'}\r\n    ]);\r\n\r\n\r\n  const body = useRef();\r\n\r\n  let recognition = null\r\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\n\r\n  if(SpeechRecognition !== undefined) {\r\n\r\n    recognition = new SpeechRecognition()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (body.current.scrollHeight > body.current.offsetHeight) {\r\n\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight\r\n    }\r\n\r\n  },[messageList])\r\n\r\n\r\n  const openEmoji = () => {\r\n\r\n    setEmojiOpen(true)\r\n  }\r\n\r\n  const closeEmoji = () => {\r\n\r\n    setEmojiOpen(false)\r\n  }\r\n\r\n\r\n  const handleEmojiClick = (event, objEmoji) => {\r\n\r\n    setText(''+text + objEmoji.emoji)\r\n  }\r\n\r\n\r\n  const handleSendMessage = () => {\r\n\r\n  }\r\n\r\n  const handleMicClick = () => {\r\n\r\n\r\n    if(recognition !== null) {\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true)\r\n      }\r\n\r\n      recognition.onend = () => {\r\n        setListening(false)\r\n      }\r\n\r\n      recognition.onresult = (event) => {\r\n\r\n\r\n\r\n        setText(text+' '+ event.result[0][0].transcript)\r\n      }\r\n\r\n\r\n      recognition.start()\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='chat-window'>\r\n\r\n      <header>\r\n        <div className=\"info\">\r\n\r\n          <img className=\"perfil-image\" src={contact.image}/>\r\n\r\n          <div className=\"name\">\r\n            {contact.name}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"button-group\">\r\n\r\n          <div className=\"button\">\r\n            <SearchIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n          </div>\r\n\r\n          <div className=\"button\">\r\n              <AttachFileIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n            </div>\r\n\r\n          <div className=\"button\">\r\n            <MoreVertIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n\r\n      <div ref={body} className=\"chat-body\">\r\n        {messageList.map((message, key) => (\r\n          <MessageItem\r\n            user={user}\r\n            message={message}\r\n            key={key}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <section className=\"emoji-area\"\r\n        style={{height: isEmojiOpen ? '250px' : '0px'}}\r\n      >\r\n\r\n        <EmojiPicker\r\n\r\n          onEmojiClick={handleEmojiClick}\r\n        />\r\n      </section>\r\n\r\n      <footer className=\"chat-input\">\r\n\r\n        <div className=\"left\">\r\n\r\n          <div className=\"button-group\" style={{width: isEmojiOpen ? 80 : 40}}>\r\n\r\n            <div className=\"button\"\r\n\r\n              onClick={closeEmoji}\r\n            >\r\n              <CloseIcon\r\n                style={\r\n                  {\r\n                    color: colors.DEFAULT_BUTTON_COLOR,\r\n                    width: isEmojiOpen ? 40 : 0\r\n                  }\r\n                }/>\r\n\r\n            </div>\r\n\r\n            <div className=\"button\"\r\n\r\n              onClick={openEmoji}\r\n            >\r\n              <InsertEmoticonIcon\r\n              style={\r\n                  {\r\n                    color: isEmojiOpen ? '#009688' : colors.DEFAULT_BUTTON_COLOR,\r\n                    marginLeft: isEmojiOpen ? 0 : -40\r\n                  }\r\n                }/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"center\">\r\n\r\n          <input\r\n            type='search'\r\n            placeholder='Pedro Digitações >:[]'\r\n            value={text}\r\n            onChange={ typed => setText(typed.target.value)}\r\n            />\r\n\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n\r\n          <div className=\"button-group\">\r\n\r\n            {\r\n\r\n            text !== ''\r\n\r\n              ?\r\n\r\n                <div className=\"button\" onClick={handleSendMessage}>\r\n                  <SendIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n                </div>\r\n\r\n              :\r\n\r\n                <div className=\"button\" onClick={handleMicClick}>\r\n                  <MicIcon style={{color: isListening ? '#126ECE' : colors.DEFAULT_BUTTON_COLOR}}/>\r\n                </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </footer>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './NewChatPicker.css'\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport colors from '../../util/colors';\r\n\r\n\r\n\r\nexport default ({ contacts, user, isShowing, setShowing }) => {\r\n\r\n  const [contactList, setcontactList] = useState(contacts)\r\n\r\n\r\n  const close = () => {\r\n\r\n    setShowing(false)\r\n  }\r\n\r\n  return (\r\n\r\n    <selection className='NewChatPicker'\r\n\r\n      style={{ left: isShowing ? \"0px\" : \"-415px\" }}\r\n    >\r\n\r\n      <header>\r\n\r\n        <div className=\"button-group\">\r\n\r\n          <div className=\"button\" onClick={close}>\r\n\r\n            <ArrowBackIcon style={{ color: \"#FFFFFF\" }} />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className='title'>\r\n          <p>Novo Chat</p>\r\n        </div>\r\n\r\n\r\n\r\n      </header>\r\n\r\n      <section className='chatlist'>\r\n\r\n        {contactList.map((item, key) => (\r\n\r\n          <div className=\"contact-card\" key={key}>\r\n\r\n            <img className=\"avatar\" src={item.image} />\r\n\r\n            <div className=\"name\">\r\n              <p>{item.name}</p>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        ))}\r\n\r\n      </section>\r\n\r\n    </selection>\r\n  )\r\n}\r\n","import firebase from 'firebase';\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-firestore'\r\n\r\nimport firebase_config from './firebase_config';\r\n\r\nconst firebaseapp = firebase.initializeApp(firebase_config)\r\nconst database = firebase.firestore()\r\n\r\nexport default {\r\n  facebookLoginPopup: async () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    let result = await firebase.auth().signInWithPopup(provider)\r\n\r\n    return result;\r\n  },\r\n\r\n  addUser: async (user) => {\r\n    await database.collection(\"User\").doc(user.id).set({\r\n\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    }, {merge: true})\r\n  },\r\n\r\n  getContactList: async (userId) => {\r\n\r\n    let list = []\r\n\r\n    let results = await database.collection(\"User\").get()\r\n\r\n    results.forEach(result => {\r\n      let userData = result.data();\r\n\r\n      if (result.id !== userId) {\r\n        list.push({\r\n\r\n          id: result.id,\r\n          name: userData.name,\r\n          avatar: userData.avatar\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyB27158ai7gdqKGFxpHtFQIfhnYtNbVfmE\",\r\n  authDomain: \"whatsapp-2-a85f3.firebaseapp.com\",\r\n  projectId: \"whatsapp-2-a85f3\",\r\n  storageBucket: \"whatsapp-2-a85f3.appspot.com\",\r\n  messagingSenderId: \"596771972223\",\r\n  appId: \"1:596771972223:web:537307414d253749e28b4a\",\r\n  measurementId: \"G-N8LSV7PKW8\"\r\n};\r\n\r\n\r\n/*\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n*/\r\n","import React from 'react';\r\nimport \"./Login.css\";\r\n\r\nimport API from \"../../server/API\"\r\n\r\nexport default ({ onReceive }) => {\r\n\r\n  const handleFacebookLogin = async () => {\r\n\r\n    let result = await API.facebookLoginPopup();\r\n\r\n    if (result) {\r\n      onReceive(result.user);\r\n    } else {\r\n      alert(\"Error!\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <button onClick={handleFacebookLogin}> Login With Facebook </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n\n\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Search from '@material-ui/icons/Search';\n\nimport ChatListItem from './Components/ChatListItem'\nimport ChatIntro from './Components/ChatIntro';\n\nimport colors from './util/colors';\nimport Images from './Images'\nimport Chat from './Components/Chat';\n\nimport NewChatPicker from './Components/NewChatPicker'\nimport Login from './Components/Login';\nimport API from './server/API';\n\nfunction App() {\n\n  const avatar = Images.USER\n\n  const [contacts, setContacts] = React.useState([])\n\n  useEffect(() => {\n\n    const getContacts = async () => {\n\n      if (user !== null) {\n        let userContacts = await API.getContactList(user.id)\n\n        setContacts(userContacts)\n      }\n\n    }\n\n    getContacts()\n  }, contacts )\n\n  const [user, setUser] = React.useState(null)\n\n  const [activeChat, setActiveChat] = useState( {} )\n\n  const [isShowingNewChat, setIsShowingNewChat] = useState(false)\n\n  const buttonColor = colors.DEFAULT_BUTTON_COLOR\n\n\n  const handleNewChat = () => {\n\n    setIsShowingNewChat(true)\n  }\n\n\n  const handleLoginData = async (user) => {\n\n    let loggedUser = {\n\n      id: user.uid,\n      name: user.displayName,\n      avatar: user.photoURL\n\n    };\n    await API.addUser(loggedUser)\n    setUser(loggedUser);\n\n  }\n\n  if(user === null ) {\n\n    return <Login onReceive={ handleLoginData }/>\n  }\n\n  return (\n\n    <div className='app-window'>\n\n      <div className='sidebar'>\n\n        <NewChatPicker\n\n          contacts={contacts}\n          user={user}\n          isShowing={isShowingNewChat}\n          setShowing={setIsShowingNewChat}\n\n        />\n\n        <header>\n\n          <div >\n\n            <img src={user.avatar} className='img-perfil'/>\n\n          </div>\n\n          <div className='button-group'>\n\n            <div className='button'>\n              <DonutLargeIcon style={{color: buttonColor}}/>\n            </div>\n\n            <div className='button' onClick={handleNewChat}>\n              <ChatIcon style={{color: buttonColor}}/>\n            </div>\n\n            <div className='button'>\n              <MoreVertIcon style={{color: buttonColor}}/>\n            </div>\n\n          </div>\n\n        </header>\n\n        <div className='search-area'>\n\n          <div className='search-input'>\n            <Search fontSize='small' style={{color: buttonColor}}/>\n            <input type='search' placeholder='Pedro pesquisas >:()...'/>\n          </div>\n\n\n        </div>\n\n        <div className='chatlist'>\n\n          {contacts.map((contact, key) => (\n\n            <ChatListItem\n              key={key}\n              contact={contact}\n              onClick={() => setActiveChat(contacts[key])}\n              active={activeChat.id === contact.id}\n            />\n\n              ))\n          }\n\n\n        </div>\n\n      </div>\n\n      <div className='content-area'>\n\n        {activeChat.id !== undefined &&\n\n          <Chat\n            contact={activeChat}\n            user={user}\n          />\n        }\n\n        {activeChat.id === undefined &&\n\n          <ChatIntro />\n        }\n\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n\n\n\n\n/*\n\n <img className='img-perfil' src='https://www.flaticon.com/svg/vstatic/svg/149/149071.svg?token=exp=1618412728~hmac=c56c9517cc5179914f240a60d068c9e6' />\n\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}