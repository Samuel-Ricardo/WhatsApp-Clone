{"version":3,"sources":["util/colors.js","Images/index.jsx","Images/ghost.png","Images/user-green.png","server/API.js","server/firebase_config.js","Components/ChatListItem/index.jsx","Components/ChatIntro/index.jsx","Components/MessageItem/index.jsx","Components/Chat/index.jsx","Components/NewChatPicker/index.jsx","Components/Login/index.jsx","App.js","index.js"],"names":["GHOST","USER","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","facebookLoginPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","addUser","user","collection","doc","id","set","name","avatar","merge","getContactList","userId","list","get","forEach","userData","data","push","getUser","newChat","contact","add","messages","users","update","chats","FieldValue","arrayUnion","chatId","title","image","with","onChatList","setContacts","onSnapshot","exists","sort","b","undefined","lastMessageDate","seconds","onChatContent","setMessageList","setUsers","chatData","console","log","sendMessage","type","body","now","Date","author","date","i","e","lastMessage","active","chat","onClick","setActiveChat","useState","setDate","useEffect","newDate","hours","getHours","minutes","getMinutes","className","src","Images","Image","alt","message","key","style","justifyContent","backgroundColor","isEmojiOpen","setEmojiOpen","text","setText","isListening","setListening","messageList","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","current","scrollHeight","offsetHeight","scrollTop","API","handleSendMessage","color","colors","ref","map","height","onEmojiClick","event","objEmoji","emoji","width","marginLeft","placeholder","value","onChange","typed","target","onKeyUp","input","keyCode","onstart","onend","onresult","transcript","start","contacts","isShowing","setShowing","contactList","setContactList","userContacts","getContacts","createNewChat","close","left","item","onReceive","handleFacebookLogin","alert","App","React","setUser","activeChat","isShowingNewChat","setIsShowingNewChat","buttonColor","handleLoginData","loggedUser","uid","displayName","photoURL","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+bAGe,G,MAFY,WCOZ,GAEbA,MCVa,IAA0B,kCDWvCC,KEXa,IAA0B,wC,gBCOnCC,G,YADcC,IAASC,cCNd,CACbC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDAAR,IAASS,aAEX,GAEbC,mBAAmB,WAAD,4BAAE,8BAAAC,EAAA,6DACZC,EAAW,IAAIZ,IAASa,KAAKC,qBADjB,SAECd,IAASa,OAAOE,gBAAgBH,GAFjC,cAEdI,EAFc,yBAIXA,GAJW,2CAAF,kDAAC,GAOnBC,QAAQ,WAAD,4BAAE,WAAOC,GAAP,SAAAP,EAAA,sEACDZ,EAASoB,WAAW,QAAQC,IAAIF,EAAKG,IAAIC,IAAI,CAEjDC,KAAML,EAAKK,KACXC,OAAQN,EAAKM,QACZ,CAACC,OAAO,IALJ,2CAAF,mDAAC,GAQRC,eAAe,WAAD,4BAAE,WAAOC,GAAP,eAAAhB,EAAA,6DAEViB,EAAO,GAFG,SAIM7B,EAASoB,WAAW,QAAQU,MAJlC,qBAMNC,SAAQ,SAAAd,GACd,IAAIe,EAAWf,EAAOgB,OAElBhB,EAAOK,KAAOM,GAChBC,EAAKK,KAAK,CAERZ,GAAIL,EAAOK,GACXE,KAAMQ,EAASR,KACfC,OAAQO,EAASP,YAdT,kBAmBPI,GAnBO,2CAAF,mDAAC,GAsBfM,QAAQ,WAAD,4BAAE,WAAOP,GAAP,iBAAAhB,EAAA,6DAEHO,EAAO,GAFJ,SAImBnB,EAASoB,WAAW,QAAQC,IAAIO,GAAQE,MAJ3D,8BAIkEG,OAJlE,cAIHhB,EAJG,OAOPE,EAAO,CACLG,GAAIL,EAAOK,GACXE,KAAMP,EAAOO,KACbC,OAAQR,EAAOQ,QAVV,kBA4BAN,GA5BA,2CAAF,mDAAC,GAgCRiB,QAAQ,WAAD,4BAAE,WAAOjB,EAAMkB,GAAb,eAAAzB,EAAA,sEAEaZ,EAASoB,WAAW,QAAQkB,IAAI,CAElDC,SAAU,GACVC,MAAM,CAACrB,EAAKG,GAAIe,EAAQf,MALnB,cAEHc,EAFG,OASPpC,EAASoB,WAAW,QAAQC,IAAIF,EAAKG,IAAImB,OAAO,CAC9CC,MAAOzC,IAASS,UAAUiC,WAAWC,WAAW,CAC9CC,OAAQT,EAAQd,GAChBwB,MAAOT,EAAQb,KACfuB,MAAOV,EAAQZ,OACfuB,KAAM,CAACX,EAAQf,QAInBtB,EAASoB,WAAW,QAAQC,IAAIgB,EAAQf,IAAImB,OAAO,CACjDC,MAAOzC,IAASS,UAAUiC,WAAWC,WAAW,CAC9CC,OAAQT,EAAQd,GAChBwB,MAAO3B,EAAKK,KACZuB,MAAO5B,EAAKM,OACZuB,KAAM,CAAC7B,EAAKG,QAvBT,kBA2BAc,GA3BA,2CAAF,qDAAC,GA8BRa,WAAY,SAACrB,EAAQsB,GAEnB,OAAOlD,EAASoB,WAAW,QAAQC,IAAIO,GAAQuB,YAAW,SAAC9B,GAEzD,GAAIA,EAAI+B,OAAQ,CACd,IAAIpB,EAAWX,EAAIY,OAEnB,GAAID,EAASU,MAAO,CAElB,IAAIA,EAAK,YAAOV,EAASU,OAEzBA,EAAMW,MAAK,SAACzC,EAAE0C,GACZ,YAA0BC,IAAtB3C,EAAE4C,sBAKoBD,IAAtBD,EAAEE,iBAHI,EAQN5C,EAAE4C,gBAAgBC,QAAUH,EAAEE,gBAAgBC,QACzC,GAGC,KAGZP,EAAYR,SAMpBgB,cAAe,SAACb,EAAQc,EAAgBC,GACtC,OAAO5D,EAASoB,WAAW,QAAQC,IAAIwB,GAAQM,YAAW,SAAA9B,GACxD,GAAIA,EAAI+B,OAAQ,CACd,IAAIS,EAAWxC,EAAIY,OACnB6B,QAAQC,IAAIF,GACZF,EAAeE,EAAStB,UACxBqB,EAASC,EAASrB,YAMxBwB,YAAY,WAAD,4BAAE,WAAOH,EAAUjC,EAAQqC,EAAMC,EAAM1B,GAArC,yBAAA5B,EAAA,sDAEPuD,EAAM,IAAIC,KAEdpE,EAASoB,WAAW,QAAQC,IAAIwC,EAAShB,QAAQJ,OAAO,CACtDF,SAAUtC,IAASS,UAAUiC,WAAWC,WAAW,CACjDqB,OACAI,OAAQzC,EACRsC,OACAI,KAAMH,MATC,OAAAvD,EAAA,KAaG4B,GAbH,qDAaF+B,EAbE,oBAeQvE,EAASoB,WAAW,QAAQC,IAAImB,EAAM+B,IAAIzC,MAflD,UAeLX,EAfK,SAiBLa,EAAWb,EAAKc,QAEPS,MAnBJ,iBAuBP,IAAS8B,KAFL9B,EArBG,YAqBSV,EAASU,OAInBA,EAAM8B,GAAG3B,SAAWgB,EAAShB,SAE/BH,EAAM8B,GAAGC,YAAcP,EACvBxB,EAAM8B,GAAGhB,gBAAkBW,GA5BxB,iBAgCDnE,EAASoB,WAAW,QAAQC,IAAImB,EAAM+B,IAAI9B,OAAO,CACrDC,UAjCK,mEAAF,2DAAC,I,OEnJC,cAAgD,IAA5CgC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,KAAqBC,GAAc,EAA7BC,cAA6B,EAAdD,SAE1C7B,EAAQ4B,EAAK5B,MAF2C,EAIpC+B,mBAAS,IAJ2B,mBAIrDR,EAJqD,KAI/CS,EAJ+C,KAM5DC,qBAAU,WAER,GAAIL,EAAKnB,gBAAkB,EAAG,CAC5B,IAAIyB,EAAU,IAAIb,KAAoC,IAA/BO,EAAKnB,gBAAgBC,SAExCyB,EAAQD,EAAQE,WAChBC,EAAUH,EAAQI,aAGtBD,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAEzCL,EAAQ,GAAD,OAHPG,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EAG5B,YAAaE,OAItB,CAACT,IAYH,OAEE,sBAAKW,UAAS,wBAAqBZ,EAAS,SAAW,IAAME,QAASA,EAAtE,UAEE,qBACEW,SAAehC,IAAVR,GAAiC,OAAVA,GAA4B,KAAVA,EAAeyC,EAAOzF,KAAOgD,EAAOuC,UAAU,WAG9F,sBAAKA,UAAU,QAAf,UAEE,sBAAKA,UAAU,OAAf,UAEE,qBAAKA,UAAU,OAAf,SACGX,EAAK7B,QAGR,qBAAKwC,UAAU,OAAf,SACGhB,OAKL,qBAAKgB,UAAU,OAAf,SAEE,qBAAKA,UAAU,cAAf,SACE,4BAAIX,EAAKF,yBC/DN,G,MAAA,WAGb,OAEE,sBAAKa,UAAU,cAAf,UAEE,gEAEE,qBAAKC,IAAKE,EAAM3F,MAAO4F,IAAI,QAAQJ,UAAU,iBAE/C,wIAGA,+D,8GChBS,G,MAAA,YAA2B,IAAzBnE,EAAwB,EAAxBA,KAAMwE,EAAkB,EAAlBA,QAAkB,KAATC,IAENd,mBAAS,KAFM,mBAEhCR,EAFgC,KAE1BS,EAF0B,KAqBvC,OAjBAC,qBAAU,WAER,GAAIW,EAAQrB,KAAO,EAAG,CACpB,IAAIW,EAAU,IAAIb,KAA4B,IAAvBuB,EAAQrB,KAAKb,SAEhCyB,EAAQD,EAAQE,WAChBC,EAAUH,EAAQI,aAGtBD,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAEzCL,EAAQ,GAAD,OAHPG,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,EAG5B,YAAaE,OAItB,CAACO,IAID,qBAAKL,UAAU,eAEbO,MACE,CACEC,eAAgB3E,EAAKG,KAAOqE,EAAQtB,OAAS,WAAa,cAJhE,SAQE,sBAAKiB,UAAU,eAEfO,MACE,CACEE,gBAAiB5E,EAAKG,KAAOqE,EAAQtB,OAAS,UAAY,cAJ9D,UASE,qBAAKiB,UAAU,UAAf,SACE,mBAAGA,UAAU,OAAb,SACIK,EAAQzB,SAId,qBAAKoB,UAAU,eAAf,SACGhB,WC7BI,cAAmB,IAAjBK,EAAgB,EAAhBA,KAAMxD,EAAU,EAAVA,KAAU,EAGK2D,oBAAS,GAHd,mBAGxBkB,EAHwB,KAGXC,EAHW,OAIPnB,mBAAS,IAJF,mBAIxBoB,EAJwB,KAIlBC,EAJkB,OAKKrB,oBAAS,GALd,mBAKxBsB,EALwB,KAKXC,EALW,OAMOvB,mBAAS,IANhB,mBAMxBwB,EANwB,KAMX3C,EANW,OAOLmB,mBAAS,IAPJ,mBAOxBtC,EAPwB,KAOjBoB,EAPiB,KAUzBM,EAAOqC,mBAETC,EAAc,KACdC,EAAoBC,OAAOD,mBAAqBC,OAAOC,6BAElCpD,IAAtBkD,IAEDD,EAAc,IAAIC,GAGpBzB,qBAAU,WAEJd,EAAK0C,QAAQC,aAAe3C,EAAK0C,QAAQE,eAE3C5C,EAAK0C,QAAQG,UAAY7C,EAAK0C,QAAQC,aAAe3C,EAAK0C,QAAQE,gBAGpE,CAACR,IAGHtB,qBAAU,WAERrB,EAAe,IAEHqD,EAAItD,cAAciB,EAAK9B,OAAQc,EAAgBC,KAE3D,CAACe,EAAK9B,SAGR,IAuBMoE,EAAoB,WAEX,KAATf,IAEFpC,QAAQC,IAAI,IACZD,QAAQC,IAAI,WACZD,QAAQC,IAAIvB,GACZsB,QAAQC,IAAI,IAEZiD,EAAIhD,YAAYW,EAAMxD,EAAKG,GAAI,OAAQ4E,EAAM1D,GAC7C2D,EAAQ,IACRF,GAAa,KA+BjB,OAEE,sBAAKX,UAAU,cAAf,UAEE,mCACE,sBAAKA,UAAU,OAAf,UAEE,qBAAKA,UAAU,eAAeC,SAAoBhC,IAAfoB,EAAK5B,OAAsC,OAAf4B,EAAK5B,OAAiC,KAAf4B,EAAK5B,MAAeyC,EAAOzF,KAAO4E,EAAK5B,QAE7H,qBAAKuC,UAAU,OAAf,SACGX,EAAK7B,WAIV,sBAAKwC,UAAU,eAAf,UAEE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAYO,MAAO,CAACqB,MAAOC,OAG7B,qBAAK7B,UAAU,SAAf,SACI,cAAC,IAAD,CAAgBO,MAAO,CAACqB,MAAOC,OAGnC,qBAAK7B,UAAU,SAAf,SACE,cAAC,IAAD,CAAcO,MAAO,CAACqB,MAAOC,aAMnC,qBAAKC,IAAKlD,EAAMoB,UAAU,YAA1B,SACGgB,EAAYe,KAAI,SAAC1B,EAASC,GAAV,OACf,cAAC,EAAD,CACEzE,KAAMA,EACNwE,QAASA,GACJC,QAKX,yBAASN,UAAU,aACjBO,MAAO,CAACyB,OAAQtB,EAAc,QAAU,OAD1C,SAIE,cAAC,IAAD,CAEEuB,aArGiB,SAACC,EAAOC,GAE/BtB,EAAQ,GAAGD,EAAOuB,EAASC,YAuGzB,yBAAQpC,UAAU,aAAlB,UAEE,qBAAKA,UAAU,OAAf,SAEE,sBAAKA,UAAU,eAAeO,MAAO,CAAC8B,MAAO3B,EAAc,GAAK,IAAhE,UAEE,qBAAKV,UAAU,SAEbV,QAvHO,WAEjBqB,GAAa,IAmHL,SAIE,cAAC,IAAD,CACEJ,MACE,CACEqB,MAAOC,EACPQ,MAAO3B,EAAc,GAAK,OAMlC,qBAAKV,UAAU,SAEbV,QA1IM,WAEhBqB,GAAa,IAsIL,SAIE,cAAC,IAAD,CACAJ,MACI,CACEqB,MAAOlB,EAAc,UAAYmB,EACjCS,WAAY5B,EAAc,GAAK,aAS3C,qBAAKV,UAAU,SAAf,SAEE,uBACErB,KAAK,SACL4D,YAAY,8BACZC,MAAO5B,EACP6B,SAAU,SAAAC,GAAK,OAAI7B,EAAQ6B,EAAMC,OAAOH,QACxCI,QAhJe,SAACC,GAEH,IAAjBA,EAAMC,SACRnB,SAkJE,qBAAK3B,UAAU,QAAf,SAEE,qBAAKA,UAAU,eAAf,SAIW,KAATY,EAII,qBAAKZ,UAAU,SAASV,QAASqC,EAAjC,SACE,cAAC,IAAD,CAAUpB,MAAO,CAACqB,MAAOC,OAK3B,qBAAK7B,UAAU,SAASV,QA/If,WAGF,OAAhB4B,IAEDA,EAAY6B,QAAU,WACpBhC,GAAa,IAGfG,EAAY8B,MAAQ,WAClBjC,GAAa,IAGfG,EAAY+B,SAAW,SAACf,GAItBrB,EAAQD,EAAK,IAAKsB,EAAMvG,OAAO,GAAG,GAAGuH,aAIvChC,EAAYiC,UA0HF,SACE,cAAC,IAAD,CAAS5C,MAAO,CAACqB,MAAOd,EAAc,UAAYe,kB,yBCxOrD,cAA+D,IAA5DuB,EAA2D,EAA3DA,SAAUvH,EAAiD,EAAjDA,KAAMwH,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,WAAY/D,EAAoB,EAApBA,cAAoB,EAErCC,mBAAS4D,GAF4B,mBAEpEG,EAFoE,KAEvDC,EAFuD,KAI3E9D,qBAAU,YAES,uCAAG,4BAAApE,EAAA,yDAEL,OAATO,EAFc,gCAGS6F,EAAIrF,eAAeR,EAAKG,IAHjC,OAGZyH,EAHY,OAKhBD,EAAeC,GALC,2CAAH,qDAUjBC,KACC,CAAC7H,IAGJ,IAAM8H,EAAa,uCAAG,WAAO5G,GAAP,eAAAzB,EAAA,sEAEDoG,EAAI5E,QAAQjB,EAAKkB,GAFhB,cAEdsC,EAFc,OAIpB+D,EAASxG,KAAKG,GAJM,SAMdwC,EAAcF,GANA,OAQpBuE,IARoB,2CAAH,sDAYbA,EAAQ,WAEZN,GAAW,IAGb,OAEE,4BAAWtD,UAAU,gBAEnBO,MAAO,CAAEsD,KAAMR,EAAY,MAAQ,UAFrC,UAKE,mCAEE,qBAAKrD,UAAU,eAAf,SAEE,qBAAKA,UAAU,SAASV,QAASsE,EAAjC,SAEE,cAAC,IAAD,CAAerD,MAAO,CAAEqB,MAAO,iBAKnC,qBAAK5B,UAAU,QAAf,SACE,+CAOJ,yBAASA,UAAU,WAAnB,SAEGuD,EAAYxB,KAAI,SAAC+B,EAAMxD,GAAP,OAEf,sBAAKN,UAAU,eAAyBV,QAAS,kBAAMqE,EAAcG,IAArE,UAEE,qBAAK9D,UAAU,SAASC,SAAqBhC,IAAhB6F,EAAK3H,QAAwC,OAAhB2H,EAAK3H,QAAmC,KAAhB2H,EAAK3H,OAAgB+D,EAAOzF,KAAOqJ,EAAK3H,SAE1H,qBAAK6D,UAAU,OAAf,SACE,4BAAI8D,EAAK5H,WALsBoE,YCxE9B,G,MAAA,YAAoB,IAAjByD,EAAgB,EAAhBA,UAEVC,EAAmB,uCAAG,4BAAA1I,EAAA,sEAEPoG,EAAIrG,qBAFG,QAEtBM,EAFsB,QAKxBoI,EAAUpI,EAAOE,MAEjBoI,MAAM,UAPkB,2CAAH,qDAWzB,OACE,qBAAKjE,UAAU,QAAf,SACE,wBAAQV,QAAS0E,EAAjB,uCCkJSE,MAjJf,WAEE,IAFa,EAImBC,IAAM3E,SAAS,IAJlC,mBAIN4D,EAJM,KAIIxF,EAJJ,OAMWuG,IAAM3E,SAAS,MAN1B,mBAMN3D,EANM,KAMAuI,EANA,OAQuB5E,mBAAU,IARjC,mBAQN6E,EARM,KAQM9E,EARN,OAUmCC,oBAAS,GAV5C,mBAUN8E,EAVM,KAUYC,EAVZ,KAYPC,EAAc3C,EAIpBnC,qBAAU,WAER,GAAa,OAAT7D,EAGF,OAFY6F,EAAI/D,WAAW9B,EAAKG,GAAI4B,KAItC,CAAC/B,IAGH,IAMM4I,EAAe,uCAAG,WAAO5I,GAAP,eAAAP,EAAA,6DAElBoJ,EAAa,CAEf1I,GAAIH,EAAK8I,IACTzI,KAAML,EAAK+I,YACXzI,OAAQN,EAAKgJ,UANO,SAShBnD,EAAI9F,QAAQ8I,GATI,OAUtBN,EAAQM,GAVc,2CAAH,sDAcrB,OAAY,OAAT7I,EAEM,cAAC,EAAD,CAAOkI,UAAYU,IAK1B,sBAAKzE,UAAU,aAAf,UAEE,sBAAKA,UAAU,UAAf,UAEE,cAAC,EAAD,CAEEoD,SAAUA,EACVvH,KAAMA,EACNwH,UAAWiB,EACXhB,WAAYiB,EACZhF,cAAeA,IAIjB,mCAEE,8BAEE,qBAAKU,IAAKpE,EAAKM,OAAQ6D,UAAU,iBAInC,sBAAKA,UAAU,eAAf,UAEE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAgBO,MAAO,CAACqB,MAAO4C,OAGjC,qBAAKxE,UAAU,SAASV,QAvDZ,WAEpBiF,GAAoB,IAqDZ,SACE,cAAC,IAAD,CAAUhE,MAAO,CAACqB,MAAO4C,OAG3B,qBAAKxE,UAAU,SAAf,SACE,cAAC,IAAD,CAAcO,MAAO,CAACqB,MAAO4C,aAOnC,qBAAKxE,UAAU,cAAf,SAEE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAQ8E,SAAS,QAAQvE,MAAO,CAACqB,MAAO4C,KACxC,uBAAO7F,KAAK,SAAS4D,YAAY,iCAMrC,qBAAKvC,UAAU,WAAf,SAEGoD,EAASrB,KAAI,SAAC1C,EAAMiB,GAAP,OAEZ,cAAC,EAAD,CAEEjB,KAAMA,EACNE,cAAeA,EACfD,QAAS,kBAAMC,EAAc6D,EAAS9C,KACtClB,OAAQiF,EAAW9G,SAAW8B,EAAK9B,QAJ9B+C,WAeb,sBAAKN,UAAU,eAAf,eAEyB/B,IAAtBoG,EAAW9G,QAEV,cAAC,EAAD,CACE8B,KAAMgF,EACNxI,KAAMA,SAIaoC,IAAtBoG,EAAW9G,QAEV,cAAC,EAAD,WCtJVwH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cdf38d63.chunk.js","sourcesContent":["\r\nconst defaultButtonColor = '#919191';\r\n\r\nexport default {\r\n  DEFAULT_BUTTON_COLOR : defaultButtonColor\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport ghost from './ghost.png'\r\nimport user from './user-green.png'\r\n\r\nconst Ghost = ghost;\r\nconst User = user;\r\n\r\nexport default {\r\n\r\n  GHOST: Ghost,\r\n  USER: User\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ghost.78a34c6f.png\";","export default __webpack_public_path__ + \"static/media/user-green.cfde39fc.png\";","import firebase from 'firebase';\r\nimport 'firebase/firebase-auth';\r\nimport 'firebase/firebase-firestore'\r\n\r\nimport firebase_config from './firebase_config';\r\n\r\nconst firebaseapp = firebase.initializeApp(firebase_config)\r\nconst database = firebase.firestore()\r\n\r\nexport default {\r\n\r\n  facebookLoginPopup: async () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    let result = await firebase.auth().signInWithPopup(provider)\r\n\r\n    return result;\r\n  },\r\n\r\n  addUser: async (user) => {\r\n    await database.collection(\"User\").doc(user.id).set({\r\n\r\n      name: user.name,\r\n      avatar: user.avatar,\r\n    }, {merge: true})\r\n  },\r\n\r\n  getContactList: async (userId) => {\r\n\r\n    let list = []\r\n\r\n    let results = await database.collection(\"User\").get()\r\n\r\n    results.forEach(result => {\r\n      let userData = result.data();\r\n\r\n      if (result.id !== userId) {\r\n        list.push({\r\n\r\n          id: result.id,\r\n          name: userData.name,\r\n          avatar: userData.avatar\r\n        });\r\n      }\r\n    })\r\n\r\n    return list;\r\n  },\r\n\r\n  getUser: async (userId) => {\r\n\r\n    let user = {}\r\n\r\n    let result = await (await database.collection(\"User\").doc(userId).get()).data()\r\n\r\n\r\n    user = {\r\n      id: result.id,\r\n      name: result.name,\r\n      avatar: result.avatar\r\n    }\r\n\r\n    // results.forEach(result => {\r\n\r\n    //   let userData = result.data()\r\n\r\n    //   if (result.id === userId) {\r\n\r\n    //     user = {\r\n    //       id: result.id,\r\n    //       name: userData.name,\r\n    //       avatar: userData.avatar\r\n    //     }\r\n\r\n    //   }\r\n    // });\r\n\r\n    return user;\r\n\r\n  },\r\n\r\n  newChat: async (user, contact) => {\r\n\r\n    let newChat = await database.collection(\"Chat\").add({\r\n\r\n      messages: [],\r\n      users:[user.id, contact.id]\r\n\r\n    });\r\n\r\n    database.collection(\"User\").doc(user.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chatId: newChat.id,\r\n        title: contact.name,\r\n        image: contact.avatar,\r\n        with: [contact.id]\r\n      })\r\n    });\r\n\r\n    database.collection(\"User\").doc(contact.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chatId: newChat.id,\r\n        title: user.name,\r\n        image: user.avatar,\r\n        with: [user.id]\r\n      })\r\n    });\r\n\r\n    return newChat;\r\n  },\r\n\r\n  onChatList: (userId, setContacts) => {\r\n\r\n    return database.collection(\"User\").doc(userId).onSnapshot((doc) => {\r\n\r\n      if (doc.exists) {\r\n        let userData = doc.data();\r\n\r\n        if (userData.chats) {\r\n\r\n          let chats = [...userData.chats];\r\n\r\n          chats.sort((a,b) => {\r\n            if (a.lastMessageDate === undefined) {\r\n\r\n              return -1;\r\n            }\r\n\r\n            if (b.lastMessageDate === undefined) {\r\n\r\n              return -1;\r\n            }\r\n\r\n            if (a.lastMessageDate.seconds < b.lastMessageDate.seconds) {\r\n              return 1;\r\n\r\n            } else {\r\n              return -1;\r\n            }\r\n          })\r\n          setContacts(chats)\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n  onChatContent: (chatId, setMessageList, setUsers) => {\r\n    return database.collection('Chat').doc(chatId).onSnapshot(doc => {\r\n      if (doc.exists) {\r\n        let chatData = doc.data();\r\n        console.log(chatData)\r\n        setMessageList(chatData.messages);\r\n        setUsers(chatData.users)\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  sendMessage: async (chatData, userId, type, body, users) => {\r\n\r\n    let now = new Date();\r\n\r\n    database.collection(\"Chat\").doc(chatData.chatId).update({\r\n      messages: firebase.firestore.FieldValue.arrayUnion({\r\n        type,\r\n        author: userId,\r\n        body,\r\n        date: now\r\n      })\r\n    });\r\n\r\n    for (let i in users) {\r\n\r\n      let user = await database.collection('User').doc(users[i]).get();\r\n\r\n      let userData = user.data();\r\n\r\n      if (userData.chats) {\r\n\r\n        let chats = [...userData.chats];\r\n\r\n        for (let e in chats) {\r\n\r\n          if (chats[e].chatId === chatData.chatId) {\r\n\r\n            chats[e].lastMessage = body;\r\n            chats[e].lastMessageDate = now;\r\n          }\r\n        };\r\n\r\n        await database.collection('User').doc(users[i]).update({\r\n          chats\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyB27158ai7gdqKGFxpHtFQIfhnYtNbVfmE\",\r\n  authDomain: \"whatsapp-2-a85f3.firebaseapp.com\",\r\n  projectId: \"whatsapp-2-a85f3\",\r\n  storageBucket: \"whatsapp-2-a85f3.appspot.com\",\r\n  messagingSenderId: \"596771972223\",\r\n  appId: \"1:596771972223:web:537307414d253749e28b4a\",\r\n  measurementId: \"G-N8LSV7PKW8\"\r\n};\r\n\r\n\r\n/*\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n*/\r\n","import React, { useEffect, useState } from 'react'\r\nimport './ChatListItem.css'\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport Colors from '../../util/colors'\r\nimport Images from '../../Images'\r\nimport API from '../../server/API';\r\n\r\n\r\nexport default ( { active, chat, setActiveChat, onClick }) => {\r\n\r\n  let image = chat.image\r\n\r\n  const [date, setDate] = useState('')\r\n\r\n  useEffect(() => {\r\n\r\n    if (chat.lastMessageDate > 0) {\r\n      let newDate = new Date(chat.lastMessageDate.seconds * 1000)\r\n\r\n      let hours = newDate.getHours();\r\n      let minutes = newDate.getMinutes();\r\n\r\n      hours = hours < 10 ? \"0\" + hours : hours;\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes\r\n\r\n      setDate(`${hours}:${minutes}`)\r\n\r\n    }\r\n\r\n  },[chat])\r\n\r\n  const handleClick = async () => {\r\n\r\n    const contact = await API.getUser(chat.with[0])\r\n\r\n    setActiveChat(contact);\r\n\r\n    console.log(contact)\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div className = {`contact-card  ${active ? 'active' : ''}`} onClick={onClick}>\r\n\r\n      <img\r\n        src={image === undefined || image === null || image === \"\" ? Images.USER : image} className='avatar' />\r\n\r\n\r\n      <div className='lines'>\r\n\r\n        <div className=\"line\">\r\n\r\n          <div className=\"name\">\r\n            {chat.title}\r\n          </div>\r\n\r\n          <div className=\"date\">\r\n            {date}\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n\r\n          <div className=\"lastMessage\">\r\n            <p>{chat.lastMessage}</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './ChatIntro.css'\r\n\r\nimport Image from '../../Images'\r\n\r\nexport default () => {\r\n\r\n\r\n  return (\r\n\r\n    <div className='intro--view'>\r\n\r\n      <h1> Seja Bem Vindo ao Whatsapp 2 </h1>\r\n\r\n        <img src={Image.GHOST} alt=\"ghost\" className='intro--image'/>\r\n\r\n      <h2> Este clone do whatssap vai além do visual, teste o chat, inicie uma conversa com algum usuário </h2>\r\n\r\n\r\n      <h5>...pedro conteudos ):-()</h5>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './MessageItem.css'\r\n\r\nexport default ({user, message, key}) => {\r\n\r\n  const [date, setDate] = useState('')\r\n\r\n  useEffect(() => {\r\n\r\n    if (message.date > 0) {\r\n      let newDate = new Date(message.date.seconds * 1000)\r\n\r\n      let hours = newDate.getHours();\r\n      let minutes = newDate.getMinutes();\r\n\r\n      hours = hours < 10 ? \"0\" + hours : hours;\r\n      minutes = minutes < 10 ? \"0\" + minutes : minutes\r\n\r\n      setDate(`${hours}:${minutes}`)\r\n\r\n    }\r\n\r\n  },[message])\r\n\r\n  return (\r\n\r\n    <div className=\"message-line\"\r\n\r\n      style={\r\n        {\r\n          justifyContent: user.id === message.author ? 'flex-end' : 'flex-start'\r\n        }\r\n      }\r\n    >\r\n      <div className=\"message-item\"\r\n\r\n      style={\r\n        {\r\n          backgroundColor: user.id === message.author ? '#DCF8C6' : 'flex-start'\r\n        }\r\n      }\r\n      >\r\n\r\n        <div className=\"message\">\r\n          <p className=\"text\">\r\n            { message.body }\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"message-data\">\r\n          {date}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Chat.css'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nimport MessageItem from '../MessageItem'\r\n\r\nimport colors from '../../util/colors';\r\nimport Images from '../../Images';\r\nimport API from '../../server/API';\r\n\r\nexport default ({chat, user}) => {\r\n\r\n\r\n  const [isEmojiOpen, setEmojiOpen] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n  const [isListening, setListening] = useState(false);\r\n  const [messageList, setMessageList] = useState([])\r\n  const [users, setUsers] = useState([])\r\n\r\n\r\n  const body = useRef();\r\n\r\n  let recognition = null\r\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\r\n\r\n  if(SpeechRecognition !== undefined) {\r\n\r\n    recognition = new SpeechRecognition()\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (body.current.scrollHeight > body.current.offsetHeight) {\r\n\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight\r\n    }\r\n\r\n  },[messageList]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setMessageList([])\r\n\r\n    let unsub = API.onChatContent(chat.chatId, setMessageList, setUsers)\r\n\r\n  },[chat.chatId])\r\n\r\n\r\n  const openEmoji = () => {\r\n\r\n    setEmojiOpen(true)\r\n  }\r\n\r\n  const closeEmoji = () => {\r\n\r\n    setEmojiOpen(false)\r\n  }\r\n\r\n\r\n  const handleEmojiClick = (event, objEmoji) => {\r\n\r\n    setText(''+text + objEmoji.emoji)\r\n  }\r\n\r\n  const handleInputKeyUp = (input) => {\r\n\r\n    if (input.keyCode == 13) {\r\n      handleSendMessage()\r\n    }\r\n  }\r\n\r\n  const handleSendMessage = () => {\r\n\r\n    if (text !== \"\") {\r\n\r\n      console.log(\"\")\r\n      console.log(\"users: \")\r\n      console.log(users)\r\n      console.log(\"\")\r\n\r\n      API.sendMessage(chat, user.id, \"text\", text, users)\r\n      setText('')\r\n      setEmojiOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleMicClick = () => {\r\n\r\n\r\n    if(recognition !== null) {\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true)\r\n      }\r\n\r\n      recognition.onend = () => {\r\n        setListening(false)\r\n      }\r\n\r\n      recognition.onresult = (event) => {\r\n\r\n\r\n\r\n        setText(text+' '+ event.result[0][0].transcript)\r\n      }\r\n\r\n\r\n      recognition.start()\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div className='chat-window'>\r\n\r\n      <header>\r\n        <div className=\"info\">\r\n\r\n          <img className=\"perfil-image\" src={chat.image === undefined || chat.image === null || chat.image === \"\" ? Images.USER : chat.image}/>\r\n\r\n          <div className=\"name\">\r\n            {chat.title}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"button-group\">\r\n\r\n          <div className=\"button\">\r\n            <SearchIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n          </div>\r\n\r\n          <div className=\"button\">\r\n              <AttachFileIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n            </div>\r\n\r\n          <div className=\"button\">\r\n            <MoreVertIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n\r\n      <div ref={body} className=\"chat-body\">\r\n        {messageList.map((message, key) => (\r\n          <MessageItem\r\n            user={user}\r\n            message={message}\r\n            key={key}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <section className=\"emoji-area\"\r\n        style={{height: isEmojiOpen ? '250px' : '0px'}}\r\n      >\r\n\r\n        <EmojiPicker\r\n\r\n          onEmojiClick={handleEmojiClick}\r\n        />\r\n      </section>\r\n\r\n      <footer className=\"chat-input\">\r\n\r\n        <div className=\"left\">\r\n\r\n          <div className=\"button-group\" style={{width: isEmojiOpen ? 80 : 40}}>\r\n\r\n            <div className=\"button\"\r\n\r\n              onClick={closeEmoji}\r\n            >\r\n              <CloseIcon\r\n                style={\r\n                  {\r\n                    color: colors.DEFAULT_BUTTON_COLOR,\r\n                    width: isEmojiOpen ? 40 : 0\r\n                  }\r\n                }/>\r\n\r\n            </div>\r\n\r\n            <div className=\"button\"\r\n\r\n              onClick={openEmoji}\r\n            >\r\n              <InsertEmoticonIcon\r\n              style={\r\n                  {\r\n                    color: isEmojiOpen ? '#009688' : colors.DEFAULT_BUTTON_COLOR,\r\n                    marginLeft: isEmojiOpen ? 0 : -40\r\n                  }\r\n                }/>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"center\">\r\n\r\n          <input\r\n            type='search'\r\n            placeholder='Pedro Digitações >:[]'\r\n            value={text}\r\n            onChange={typed => setText(typed.target.value)}\r\n            onKeyUp={handleInputKeyUp}\r\n            />\r\n\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n\r\n          <div className=\"button-group\">\r\n\r\n            {\r\n\r\n            text !== ''\r\n\r\n              ?\r\n\r\n                <div className=\"button\" onClick={handleSendMessage}>\r\n                  <SendIcon style={{color: colors.DEFAULT_BUTTON_COLOR}}/>\r\n                </div>\r\n\r\n              :\r\n\r\n                <div className=\"button\" onClick={handleMicClick}>\r\n                  <MicIcon style={{color: isListening ? '#126ECE' : colors.DEFAULT_BUTTON_COLOR}}/>\r\n                </div>\r\n            }\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </footer>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './NewChatPicker.css'\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport colors from '../../util/colors';\r\nimport Images from '../../Images';\r\nimport API from '../../server/API';\r\n\r\n\r\n\r\nexport default ({ contacts, user, isShowing, setShowing, setActiveChat }) => {\r\n\r\n  const [contactList, setContactList] = useState(contacts)\r\n\r\n  useEffect(() => {\r\n\r\n    const getContacts = async () => {\r\n\r\n      if (user !== null) {\r\n        let userContacts = await API.getContactList(user.id)\r\n\r\n        setContactList(userContacts)\r\n      }\r\n\r\n    }\r\n\r\n    getContacts()\r\n  }, [user] )\r\n\r\n\r\n  const createNewChat = async (contact) => {\r\n\r\n    const chat = await API.newChat(user,contact)\r\n\r\n    contacts.push(contact)\r\n\r\n    await setActiveChat(chat)\r\n\r\n    close()\r\n\r\n  }\r\n\r\n  const close = () => {\r\n\r\n    setShowing(false)\r\n  }\r\n\r\n  return (\r\n\r\n    <selection className='NewChatPicker'\r\n\r\n      style={{ left: isShowing ? \"0px\" : \"-415px\" }}\r\n    >\r\n\r\n      <header>\r\n\r\n        <div className=\"button-group\">\r\n\r\n          <div className=\"button\" onClick={close}>\r\n\r\n            <ArrowBackIcon style={{ color: \"#FFFFFF\" }} />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className='title'>\r\n          <p>Novo Chat</p>\r\n        </div>\r\n\r\n\r\n\r\n      </header>\r\n\r\n      <section className='chatlist'>\r\n\r\n        {contactList.map((item, key) => (\r\n\r\n          <div className=\"contact-card\" key={key} onClick={() => createNewChat(item)}>\r\n\r\n            <img className=\"avatar\" src={item.avatar === undefined || item.avatar === null || item.avatar === \"\" ? Images.USER : item.avatar} />\r\n\r\n            <div className=\"name\">\r\n              <p>{item.name}</p>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        ))}\r\n\r\n      </section>\r\n\r\n    </selection>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport \"./Login.css\";\r\n\r\nimport API from \"../../server/API\"\r\n\r\nexport default ({ onReceive }) => {\r\n\r\n  const handleFacebookLogin = async () => {\r\n\r\n    let result = await API.facebookLoginPopup();\r\n\r\n    if (result) {\r\n      onReceive(result.user);\r\n    } else {\r\n      alert(\"Error!\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <button onClick={handleFacebookLogin}> Login With Facebook </button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Search from '@material-ui/icons/Search';\n\nimport ChatListItem from './Components/ChatListItem'\nimport ChatIntro from './Components/ChatIntro';\n\nimport colors from './util/colors';\nimport Images from './Images'\nimport Chat from './Components/Chat';\n\nimport NewChatPicker from './Components/NewChatPicker'\nimport Login from './Components/Login';\nimport API from './server/API';\n\nfunction App() {\n\n  const avatar = Images.USER\n\n  const [contacts, setContacts] = React.useState([])\n\n  const [user, setUser] = React.useState(null)\n\n  const [activeChat, setActiveChat] = useState( {} )\n\n  const [isShowingNewChat, setIsShowingNewChat] = useState(false)\n\n  const buttonColor = colors.DEFAULT_BUTTON_COLOR\n\n\n\n  useEffect(() => {\n\n    if (user !== null) {\n      let unsub = API.onChatList(user.id, setContacts);\n\n      return unsub\n    }\n  },[user])\n\n\n  const handleNewChat = () => {\n\n    setIsShowingNewChat(true)\n  }\n\n\n  const handleLoginData = async (user) => {\n\n    let loggedUser = {\n\n      id: user.uid,\n      name: user.displayName,\n      avatar: user.photoURL\n\n    };\n    await API.addUser(loggedUser)\n    setUser(loggedUser);\n\n  }\n\n  if(user === null ) {\n\n    return <Login onReceive={ handleLoginData }/>\n  }\n\n  return (\n\n    <div className='app-window'>\n\n      <div className='sidebar'>\n\n        <NewChatPicker\n\n          contacts={contacts}\n          user={user}\n          isShowing={isShowingNewChat}\n          setShowing={setIsShowingNewChat}\n          setActiveChat={setActiveChat}\n\n        />\n\n        <header>\n\n          <div >\n\n            <img src={user.avatar} className='img-perfil'/>\n\n          </div>\n\n          <div className='button-group'>\n\n            <div className='button'>\n              <DonutLargeIcon style={{color: buttonColor}}/>\n            </div>\n\n            <div className='button' onClick={handleNewChat}>\n              <ChatIcon style={{color: buttonColor}}/>\n            </div>\n\n            <div className='button'>\n              <MoreVertIcon style={{color: buttonColor}}/>\n            </div>\n\n          </div>\n\n        </header>\n\n        <div className='search-area'>\n\n          <div className='search-input'>\n            <Search fontSize='small' style={{color: buttonColor}}/>\n            <input type='search' placeholder='Pedro pesquisas >:()...'/>\n          </div>\n\n\n        </div>\n\n        <div className='chatlist'>\n\n          {contacts.map((chat, key) => (\n\n            <ChatListItem\n              key={key}\n              chat={chat}\n              setActiveChat={setActiveChat}\n              onClick={() => setActiveChat(contacts[key])}\n              active={activeChat.chatId === chat.chatId}\n            />\n\n              ))\n          }\n\n\n        </div>\n\n      </div>\n\n      <div className='content-area'>\n\n        {activeChat.chatId !== undefined &&\n\n          <Chat\n            chat={activeChat}\n            user={user}\n          />\n        }\n\n        {activeChat.chatId === undefined &&\n\n          <ChatIntro />\n        }\n\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n\n\n\n\n/*\n\n <img className='img-perfil' src='https://www.flaticon.com/svg/vstatic/svg/149/149071.svg?token=exp=1618412728~hmac=c56c9517cc5179914f240a60d068c9e6' />\n\n\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}